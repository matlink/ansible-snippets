{
    "create, update, or destroy Automation Platform Controller ad hoc commands.": {
        "prefix": [
            "awx.awx.ad_hoc_command",
            "create, update, or destroy Automation Platform Controller ad hoc commands."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.ad_hoc_command:",
            "    become_enabled: ${2|false,true|}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    credential: ${8:string}",
            "    diff_mode: ${9|false,true|}",
            "    execution_environment: ${10:string}",
            "    forks: ${12:int}",
            "    inventory: ${14:string}",
            "    job_type: ${15:string}",
            "    limit: ${16:string}",
            "    module_args: ${17:string}",
            "    module_name: ${18:string}",
            "    timeout: ${19:int}",
            "    validate_certs: ${20|false,true|}",
            "    verbosity: ${21:int}",
            "    wait: ${22|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller ad hoc commands.",
        "scope": "ansible"
    },
    "Cancel an Ad Hoc Command.": {
        "prefix": [
            "awx.awx.ad_hoc_command_cancel",
            "Cancel an Ad Hoc Command."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.ad_hoc_command_cancel:",
            "    command_id: ${2:int}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    fail_if_not_running: ${8|false,true|}",
            "    timeout: ${10:0}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Cancel an Ad Hoc Command.",
        "scope": "ansible"
    },
    "Wait for Automation Platform Controller Ad Hoc Command to finish.": {
        "prefix": [
            "awx.awx.ad_hoc_command_wait",
            "Wait for Automation Platform Controller Ad Hoc Command to finish."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.ad_hoc_command_wait:",
            "    command_id: ${2:int}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    timeout: ${9:int}",
            "    validate_certs: ${10|false,true|}",
            "$0"
        ],
        "description": "Wait for Automation Platform Controller Ad Hoc Command to finish.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller applications": {
        "prefix": [
            "awx.awx.application",
            "create, update, or destroy Automation Platform Controller applications"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.application:",
            "    authorization_grant_type: ${2:string}",
            "    client_type: ${3:string}",
            "    controller_config_file: ${4:path}",
            "    controller_host: ${5:string}",
            "    controller_oauthtoken: ${6:\"raw\"}",
            "    controller_password: ${7:string}",
            "    controller_username: ${8:string}",
            "    description: ${9:string}",
            "    name: ${10:string}",
            "    new_name: ${11:string}",
            "    organization: ${12:string}",
            "    redirect_uris:",
            "      - ${13:element}",
            "    skip_authorization: ${14|false,true|}",
            "    state: ${15|present,absent|}",
            "    validate_certs: ${16|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller applications",
        "scope": "ansible"
    },
    "Returns metadata about the collection this module lives in.": {
        "prefix": [
            "awx.awx.controller_meta",
            "Returns metadata about the collection this module lives in."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.controller_meta:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    validate_certs: ${7|false,true|}",
            "$0"
        ],
        "description": "Returns metadata about the collection this module lives in.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller credential.": {
        "prefix": [
            "awx.awx.credential",
            "create, update, or destroy Automation Platform Controller credential."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.credential:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    copy_from: ${7:string}",
            "    credential_type: ${8:string}",
            "    description: ${9:string}",
            "    name: ${11:string}",
            "    new_name: ${12:string}",
            "    organization: ${13:string}",
            "    state: ${14|present,absent|}",
            "    team: ${15:string}",
            "    update_secrets: ${16|true,false|}",
            "    user: ${17:string}",
            "    validate_certs: ${18|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller credential.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller credential input sources.": {
        "prefix": [
            "awx.awx.credential_input_source",
            "create, update, or destroy Automation Platform Controller credential input sources."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.credential_input_source:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    description: ${7:string}",
            "    input_field_name: ${8:string}",
            "    source_credential: ${10:string}",
            "    state: ${11|present,absent|}",
            "    target_credential: ${12:string}",
            "    validate_certs: ${13|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller credential input sources.",
        "scope": "ansible"
    },
    "Create, update, or destroy custom Automation Platform Controller credential type.": {
        "prefix": [
            "awx.awx.credential_type",
            "Create, update, or destroy custom Automation Platform Controller credential type."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.credential_type:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    description: ${7:string}",
            "    kind: ${10:string}",
            "    name: ${11:string}",
            "    new_name: ${12:string}",
            "    state: ${13|present,absent|}",
            "    validate_certs: ${14|false,true|}",
            "$0"
        ],
        "description": "Create, update, or destroy custom Automation Platform Controller credential type.",
        "scope": "ansible"
    },
    "create, update, or destroy Execution Environments in Automation Platform Controller.": {
        "prefix": [
            "awx.awx.execution_environment",
            "create, update, or destroy Execution Environments in Automation Platform Controller."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.execution_environment:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credential: ${7:string}",
            "    description: ${8:string}",
            "    image: ${9:string}",
            "    name: ${10:string}",
            "    new_name: ${11:string}",
            "    organization: ${12:string}",
            "    pull: ${13|missing,always,never|}",
            "    state: ${14|present,absent|}",
            "    validate_certs: ${15|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Execution Environments in Automation Platform Controller.",
        "scope": "ansible"
    },
    "export resources from Automation Platform Controller.": {
        "prefix": [
            "awx.awx.export",
            "export resources from Automation Platform Controller."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.export:",
            "    all: ${2|true,false|}",
            "    applications:",
            "      - ${3:element}",
            "    controller_config_file: ${4:path}",
            "    controller_host: ${5:string}",
            "    controller_oauthtoken: ${6:\"raw\"}",
            "    controller_password: ${7:string}",
            "    controller_username: ${8:string}",
            "    credential_types:",
            "      - ${9:element}",
            "    credentials:",
            "      - ${10:element}",
            "    execution_environments:",
            "      - ${11:element}",
            "    inventory:",
            "      - ${12:element}",
            "    inventory_sources:",
            "      - ${13:element}",
            "    job_templates:",
            "      - ${14:element}",
            "    notification_templates:",
            "      - ${15:element}",
            "    organizations:",
            "      - ${16:element}",
            "    projects:",
            "      - ${17:element}",
            "    schedules:",
            "      - ${18:element}",
            "    teams:",
            "      - ${19:element}",
            "    users:",
            "      - ${20:element}",
            "    validate_certs: ${21|false,true|}",
            "    workflow_job_templates:",
            "      - ${22:element}",
            "$0"
        ],
        "description": "export resources from Automation Platform Controller.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller group.": {
        "prefix": [
            "awx.awx.group",
            "create, update, or destroy Automation Platform Controller group."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.group:",
            "    children:",
            "      - ${2:element}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    description: ${8:string}",
            "    hosts:",
            "      - ${9:element}",
            "    inventory: ${10:string}",
            "    name: ${11:string}",
            "    new_name: ${12:string}",
            "    preserve_existing_children: ${13|false,true|}",
            "    preserve_existing_hosts: ${14|false,true|}",
            "    state: ${15|present,absent|}",
            "    validate_certs: ${16|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller group.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller host.": {
        "prefix": [
            "awx.awx.host",
            "create, update, or destroy Automation Platform Controller host."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.host:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    description: ${7:string}",
            "    enabled: ${8|false,true|}",
            "    inventory: ${9:string}",
            "    name: ${10:string}",
            "    new_name: ${11:string}",
            "    state: ${12|present,absent|}",
            "    validate_certs: ${13|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller host.",
        "scope": "ansible"
    },
    "import resources into Automation Platform Controller.": {
        "prefix": [
            "awx.awx.import",
            "import resources into Automation Platform Controller."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.import:",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    validate_certs: ${8|false,true|}",
            "$0"
        ],
        "description": "import resources into Automation Platform Controller.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller instances.": {
        "prefix": [
            "awx.awx.instance",
            "create, update, or destroy Automation Platform Controller instances."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.instance:",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    enabled: ${8|false,true|}",
            "    hostname: ${9:string}",
            "    listener_port: ${10:int}",
            "    managed_by_policy: ${11|false,true|}",
            "    node_state: ${12:string}",
            "    node_type: ${13:string}",
            "    validate_certs: ${14|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller instances.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller instance groups.": {
        "prefix": [
            "awx.awx.instance_group",
            "create, update, or destroy Automation Platform Controller instance groups."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.instance_group:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credential: ${7:string}",
            "    instances:",
            "      - ${8:element}",
            "    is_container_group: ${9|false,true|}",
            "    max_concurrent_jobs: ${10:int}",
            "    max_forks: ${11:int}",
            "    name: ${12:string}",
            "    new_name: ${13:string}",
            "    pod_spec_override: ${14:string}",
            "    policy_instance_list:",
            "      - ${15:element}",
            "    policy_instance_minimum: ${16:int}",
            "    policy_instance_percentage: ${17:int}",
            "    state: ${18|present,absent|}",
            "    validate_certs: ${19|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller instance groups.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller inventory.": {
        "prefix": [
            "awx.awx.inventory",
            "create, update, or destroy Automation Platform Controller inventory."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.inventory:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    copy_from: ${7:string}",
            "    description: ${8:string}",
            "    host_filter: ${9:string}",
            "    instance_groups:",
            "      - ${10:element}",
            "    kind: ${11:string}",
            "    name: ${12:string}",
            "    new_name: ${13:string}",
            "    organization: ${14:string}",
            "    prevent_instance_group_fallback: ${15|false,true|}",
            "    state: ${16|present,absent|}",
            "    validate_certs: ${17|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller inventory.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller inventory source.": {
        "prefix": [
            "awx.awx.inventory_source",
            "create, update, or destroy Automation Platform Controller inventory source."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.inventory_source:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credential: ${7:string}",
            "    custom_virtualenv: ${8:string}",
            "    description: ${9:string}",
            "    enabled_value: ${10:string}",
            "    enabled_var: ${11:string}",
            "    execution_environment: ${12:string}",
            "    host_filter: ${13:string}",
            "    inventory: ${14:string}",
            "    name: ${15:string}",
            "    new_name: ${16:string}",
            "    notification_templates_error:",
            "      - ${17:element}",
            "    notification_templates_started:",
            "      - ${18:element}",
            "    notification_templates_success:",
            "      - ${19:element}",
            "    organization: ${20:string}",
            "    overwrite: ${21|false,true|}",
            "    overwrite_vars: ${22|false,true|}",
            "    source: ${23:string}",
            "    source_path: ${24:string}",
            "    source_project: ${25:string}",
            "    state: ${27|present,absent|}",
            "    timeout: ${28:int}",
            "    update_cache_timeout: ${29:int}",
            "    update_on_launch: ${30|false,true|}",
            "    validate_certs: ${31|false,true|}",
            "    verbosity: ${32:int}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller inventory source.",
        "scope": "ansible"
    },
    "Update inventory source(s).": {
        "prefix": [
            "awx.awx.inventory_source_update",
            "Update inventory source(s)."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.inventory_source_update:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    inventory: ${8:string}",
            "    name: ${9:string}",
            "    organization: ${10:string}",
            "    timeout: ${11:int}",
            "    validate_certs: ${12|false,true|}",
            "    wait: ${13|false,true|}",
            "$0"
        ],
        "description": "Update inventory source(s).",
        "scope": "ansible"
    },
    "Cancel an Automation Platform Controller Job.": {
        "prefix": [
            "awx.awx.job_cancel",
            "Cancel an Automation Platform Controller Job."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.job_cancel:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    fail_if_not_running: ${7|false,true|}",
            "    job_id: ${8:int}",
            "    validate_certs: ${9|false,true|}",
            "$0"
        ],
        "description": "Cancel an Automation Platform Controller Job.",
        "scope": "ansible"
    },
    "Launch an Ansible Job.": {
        "prefix": [
            "awx.awx.job_launch",
            "Launch an Ansible Job."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.job_launch:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credentials:",
            "      - ${8:element}",
            "    diff_mode: ${9|false,true|}",
            "    execution_environment: ${10:string}",
            "    forks: ${12:int}",
            "    instance_groups:",
            "      - ${13:element}",
            "    inventory: ${15:string}",
            "    job_slice_count: ${16:int}",
            "    job_timeout: ${17:int}",
            "    job_type: ${18:string}",
            "    labels:",
            "      - ${19:element}",
            "    limit: ${20:string}",
            "    name: ${21:string}",
            "    organization: ${22:string}",
            "    scm_branch: ${23:string}",
            "    skip_tags:",
            "      - ${24:element}",
            "    tags:",
            "      - ${25:element}",
            "    timeout: ${26:int}",
            "    validate_certs: ${27|false,true|}",
            "    verbosity: ${28:int}",
            "    wait: ${29|false,true|}",
            "$0"
        ],
        "description": "Launch an Ansible Job.",
        "scope": "ansible"
    },
    "List Automation Platform Controller jobs.": {
        "prefix": [
            "awx.awx.job_list",
            "List Automation Platform Controller jobs."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.job_list:",
            "    all_pages: ${2|true,false|}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    page: ${8:int}",
            "    status: ${10:string}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "List Automation Platform Controller jobs.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller job templates.": {
        "prefix": [
            "awx.awx.job_template",
            "create, update, or destroy Automation Platform Controller job templates."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.job_template:",
            "    allow_simultaneous: ${2|false,true|}",
            "    ask_credential_on_launch: ${3|false,true|}",
            "    ask_diff_mode_on_launch: ${4|false,true|}",
            "    ask_execution_environment_on_launch: ${5|false,true|}",
            "    ask_forks_on_launch: ${6|false,true|}",
            "    ask_instance_groups_on_launch: ${7|false,true|}",
            "    ask_inventory_on_launch: ${8|false,true|}",
            "    ask_job_slice_count_on_launch: ${9|false,true|}",
            "    ask_job_type_on_launch: ${10|false,true|}",
            "    ask_labels_on_launch: ${11|false,true|}",
            "    ask_limit_on_launch: ${12|false,true|}",
            "    ask_scm_branch_on_launch: ${13|false,true|}",
            "    ask_skip_tags_on_launch: ${14|false,true|}",
            "    ask_tags_on_launch: ${15|false,true|}",
            "    ask_timeout_on_launch: ${16|false,true|}",
            "    ask_variables_on_launch: ${17|false,true|}",
            "    ask_verbosity_on_launch: ${18|false,true|}",
            "    become_enabled: ${19|false,true|}",
            "    controller_config_file: ${20:path}",
            "    controller_host: ${21:string}",
            "    controller_oauthtoken: ${22:\"raw\"}",
            "    controller_password: ${23:string}",
            "    controller_username: ${24:string}",
            "    copy_from: ${25:string}",
            "    credential: ${26:string}",
            "    credentials:",
            "      - ${27:element}",
            "    custom_virtualenv: ${28:string}",
            "    description: ${29:string}",
            "    diff_mode: ${30|false,true|}",
            "    execution_environment: ${31:string}",
            "    force_handlers: ${33|false,true|}",
            "    forks: ${34:int}",
            "    host_config_key: ${35:string}",
            "    instance_groups:",
            "      - ${36:element}",
            "    inventory: ${37:string}",
            "    job_slice_count: ${38:int}",
            "    job_tags: ${39:string}",
            "    job_type: ${40:string}",
            "    labels:",
            "      - ${41:element}",
            "    limit: ${42:string}",
            "    name: ${43:string}",
            "    new_name: ${44:string}",
            "    notification_templates_error:",
            "      - ${45:element}",
            "    notification_templates_started:",
            "      - ${46:element}",
            "    notification_templates_success:",
            "      - ${47:element}",
            "    organization: ${48:string}",
            "    playbook: ${49:string}",
            "    prevent_instance_group_fallback: ${50|false,true|}",
            "    project: ${51:string}",
            "    scm_branch: ${52:string}",
            "    skip_tags: ${53:string}",
            "    start_at_task: ${54:string}",
            "    state: ${55|present,absent|}",
            "    survey_enabled: ${56|false,true|}",
            "    timeout: ${58:0}",
            "    use_fact_cache: ${59|false,true|}",
            "    validate_certs: ${60|false,true|}",
            "    vault_credential: ${61:string}",
            "    verbosity: ${62:int}",
            "    webhook_credential: ${63:string}",
            "    webhook_service: ${64:string}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller job templates.",
        "scope": "ansible"
    },
    "Wait for Automation Platform Controller job to finish.": {
        "prefix": [
            "awx.awx.job_wait",
            "Wait for Automation Platform Controller job to finish."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.job_wait:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    job_id: ${8:int}",
            "    job_type: ${9|jobs,project_updates,inventory_updates,workflow_jobs|}",
            "    timeout: ${10:int}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Wait for Automation Platform Controller job to finish.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller labels.": {
        "prefix": [
            "awx.awx.label",
            "create, update, or destroy Automation Platform Controller labels."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.label:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    name: ${7:string}",
            "    new_name: ${8:string}",
            "    organization: ${9:string}",
            "    state: ${10|present|}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller labels.",
        "scope": "ansible"
    },
    "Set the license for Automation Platform Controller": {
        "prefix": [
            "awx.awx.license",
            "Set the license for Automation Platform Controller"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.license:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    force: ${7|true,false|}",
            "    manifest: ${8:string}",
            "    pool_id: ${9:string}",
            "    state: ${10|present,absent|}",
            "    validate_certs: ${11|false,true|}",
            "$0"
        ],
        "description": "Set the license for Automation Platform Controller",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller notification.": {
        "prefix": [
            "awx.awx.notification_template",
            "create, update, or destroy Automation Platform Controller notification."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.notification_template:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    copy_from: ${7:string}",
            "    description: ${8:string}",
            "    name: ${10:string}",
            "    new_name: ${11:string}",
            "    notification_type: ${13:string}",
            "    organization: ${14:string}",
            "    state: ${15|present,absent|}",
            "    validate_certs: ${16|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller notification.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller organizations": {
        "prefix": [
            "awx.awx.organization",
            "create, update, or destroy Automation Platform Controller organizations"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.organization:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    custom_virtualenv: ${7:string}",
            "    default_environment: ${8:string}",
            "    description: ${9:string}",
            "    galaxy_credentials:",
            "      - ${10:element}",
            "    instance_groups:",
            "      - ${11:element}",
            "    max_hosts: ${12:int}",
            "    name: ${13:string}",
            "    new_name: ${14:string}",
            "    notification_templates_approvals:",
            "      - ${15:element}",
            "    notification_templates_error:",
            "      - ${16:element}",
            "    notification_templates_started:",
            "      - ${17:element}",
            "    notification_templates_success:",
            "      - ${18:element}",
            "    state: ${19|present,absent|}",
            "    validate_certs: ${20|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller organizations",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller projects": {
        "prefix": [
            "awx.awx.project",
            "create, update, or destroy Automation Platform Controller projects"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.project:",
            "    allow_override: ${2|false,true|}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    copy_from: ${8:string}",
            "    credential: ${9:string}",
            "    custom_virtualenv: ${10:string}",
            "    default_environment: ${11:string}",
            "    description: ${12:string}",
            "    local_path: ${14:string}",
            "    name: ${15:string}",
            "    new_name: ${16:string}",
            "    notification_templates_error:",
            "      - ${17:element}",
            "    notification_templates_started:",
            "      - ${18:element}",
            "    notification_templates_success:",
            "      - ${19:element}",
            "    organization: ${20:string}",
            "    scm_branch: ${21:string}",
            "    scm_clean: ${22|false,true|}",
            "    scm_delete_on_update: ${23|false,true|}",
            "    scm_refspec: ${24:string}",
            "    scm_track_submodules: ${25|false,true|}",
            "    scm_type: ${26:string}",
            "    scm_update_cache_timeout: ${27:int}",
            "    scm_update_on_launch: ${28|false,true|}",
            "    scm_url: ${29:string}",
            "    signature_validation_credential: ${30:string}",
            "    state: ${31|present,absent|}",
            "    timeout: ${32:int}",
            "    update_project: ${33|false,true|}",
            "    validate_certs: ${34|false,true|}",
            "    wait: ${35|true,false|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller projects",
        "scope": "ansible"
    },
    "Update a Project in Automation Platform Controller": {
        "prefix": [
            "awx.awx.project_update",
            "Update a Project in Automation Platform Controller"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.project_update:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    name: ${8:string}",
            "    organization: ${9:string}",
            "    timeout: ${10:int}",
            "    validate_certs: ${11|false,true|}",
            "    wait: ${12|true,false|}",
            "$0"
        ],
        "description": "Update a Project in Automation Platform Controller",
        "scope": "ansible"
    },
    "grant or revoke an Automation Platform Controller role.": {
        "prefix": [
            "awx.awx.role",
            "grant or revoke an Automation Platform Controller role."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.role:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credential: ${7:string}",
            "    credentials:",
            "      - ${8:element}",
            "    inventories:",
            "      - ${9:element}",
            "    inventory: ${10:string}",
            "    job_template: ${11:string}",
            "    job_templates:",
            "      - ${12:element}",
            "    lookup_organization: ${13:string}",
            "    organization: ${14:string}",
            "    organizations:",
            "      - ${15:element}",
            "    project: ${16:string}",
            "    projects:",
            "      - ${17:element}",
            "    role: ${18:string}",
            "    state: ${19|present,absent|}",
            "    target_team: ${20:string}",
            "    target_teams:",
            "      - ${21:element}",
            "    team: ${22:string}",
            "    user: ${23:string}",
            "    validate_certs: ${24|false,true|}",
            "    workflow: ${25:string}",
            "    workflows:",
            "      - ${26:element}",
            "$0"
        ],
        "description": "grant or revoke an Automation Platform Controller role.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller schedules.": {
        "prefix": [
            "awx.awx.schedule",
            "create, update, or destroy Automation Platform Controller schedules."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.schedule:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    credentials:",
            "      - ${7:element}",
            "    description: ${8:string}",
            "    diff_mode: ${9|false,true|}",
            "    enabled: ${10|false,true|}",
            "    execution_environment: ${11:string}",
            "    forks: ${13:int}",
            "    instance_groups:",
            "      - ${14:element}",
            "    inventory: ${15:string}",
            "    job_slice_count: ${16:int}",
            "    job_tags: ${17:string}",
            "    job_type: ${18:string}",
            "    labels:",
            "      - ${19:element}",
            "    limit: ${20:string}",
            "    name: ${21:string}",
            "    new_name: ${22:string}",
            "    organization: ${23:string}",
            "    rrule: ${24:string}",
            "    scm_branch: ${25:string}",
            "    skip_tags: ${26:string}",
            "    state: ${27|present,absent|}",
            "    timeout: ${28:int}",
            "    unified_job_template: ${29:string}",
            "    validate_certs: ${30|false,true|}",
            "    verbosity: ${31:int}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller schedules.",
        "scope": "ansible"
    },
    "Modify Automation Platform Controller settings.": {
        "prefix": [
            "awx.awx.settings",
            "Modify Automation Platform Controller settings."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.settings:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    name: ${7:string}",
            "    validate_certs: ${9|false,true|}",
            "    value: ${10:string}",
            "$0"
        ],
        "description": "Modify Automation Platform Controller settings.",
        "scope": "ansible"
    },
    "Get subscription list": {
        "prefix": [
            "awx.awx.subscriptions",
            "Get subscription list"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.subscriptions:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    password: ${8:string}",
            "    username: ${9:string}",
            "    validate_certs: ${10|false,true|}",
            "$0"
        ],
        "description": "Get subscription list",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller team.": {
        "prefix": [
            "awx.awx.team",
            "create, update, or destroy Automation Platform Controller team."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.team:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    description: ${7:string}",
            "    name: ${8:string}",
            "    new_name: ${9:string}",
            "    organization: ${10:string}",
            "    state: ${11|present,absent|}",
            "    validate_certs: ${12|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller team.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller tokens.": {
        "prefix": [
            "awx.awx.token",
            "create, update, or destroy Automation Platform Controller tokens."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.token:",
            "    application: ${2:string}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    description: ${8:string}",
            "    existing_token_id: ${10:string}",
            "    scope: ${11:string}",
            "    state: ${12|present,absent|}",
            "    validate_certs: ${13|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller tokens.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller users.": {
        "prefix": [
            "awx.awx.user",
            "create, update, or destroy Automation Platform Controller users."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.user:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    email: ${7:string}",
            "    first_name: ${8:string}",
            "    is_superuser: ${9|false,true|}",
            "    is_system_auditor: ${10|false,true|}",
            "    last_name: ${11:string}",
            "    new_username: ${12:string}",
            "    organization: ${13:string}",
            "    password: ${14:string}",
            "    state: ${15|present,absent|}",
            "    update_secrets: ${16|true,false|}",
            "    username: ${17:string}",
            "    validate_certs: ${18|false,true|}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller users.",
        "scope": "ansible"
    },
    "Approve an approval node in a workflow job.": {
        "prefix": [
            "awx.awx.workflow_approval",
            "Approve an approval node in a workflow job."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.workflow_approval:",
            "    action: ${2|approve,deny|}",
            "    controller_config_file: ${3:path}",
            "    controller_host: ${4:string}",
            "    controller_oauthtoken: ${5:\"raw\"}",
            "    controller_password: ${6:string}",
            "    controller_username: ${7:string}",
            "    name: ${9:string}",
            "    timeout: ${10:10}",
            "    validate_certs: ${11|false,true|}",
            "    workflow_job_id: ${12:int}",
            "$0"
        ],
        "description": "Approve an approval node in a workflow job.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller workflow job templates.": {
        "prefix": [
            "awx.awx.workflow_job_template",
            "create, update, or destroy Automation Platform Controller workflow job templates."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.workflow_job_template:",
            "    allow_simultaneous: ${2|false,true|}",
            "    ask_inventory_on_launch: ${3|false,true|}",
            "    ask_labels_on_launch: ${4|false,true|}",
            "    ask_limit_on_launch: ${5|false,true|}",
            "    ask_scm_branch_on_launch: ${6|false,true|}",
            "    ask_skip_tags_on_launch: ${7|false,true|}",
            "    ask_tags_on_launch: ${8|false,true|}",
            "    ask_variables_on_launch: ${9|false,true|}",
            "    controller_config_file: ${10:path}",
            "    controller_host: ${11:string}",
            "    controller_oauthtoken: ${12:\"raw\"}",
            "    controller_password: ${13:string}",
            "    controller_username: ${14:string}",
            "    copy_from: ${15:string}",
            "    description: ${16:string}",
            "    destroy_current_nodes: ${17|false,true|}",
            "    inventory: ${19:string}",
            "    job_tags: ${20:string}",
            "    labels:",
            "      - ${21:element}",
            "    limit: ${22:string}",
            "    name: ${23:string}",
            "    new_name: ${24:string}",
            "    notification_templates_approvals:",
            "      - ${25:element}",
            "    notification_templates_error:",
            "      - ${26:element}",
            "    notification_templates_started:",
            "      - ${27:element}",
            "    notification_templates_success:",
            "      - ${28:element}",
            "    organization: ${29:string}",
            "    scm_branch: ${30:string}",
            "    skip_tags: ${31:string}",
            "    state: ${32|present,absent|}",
            "    survey_enabled: ${33|false,true|}",
            "    validate_certs: ${35|false,true|}",
            "    webhook_credential: ${36:string}",
            "    webhook_service: ${37:string}",
            "    workflow_nodes:",
            "      - ${38:element}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller workflow job templates.",
        "scope": "ansible"
    },
    "create, update, or destroy Automation Platform Controller workflow job template nodes.": {
        "prefix": [
            "awx.awx.workflow_job_template_node",
            "create, update, or destroy Automation Platform Controller workflow job template nodes."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.workflow_job_template_node:",
            "    all_parents_must_converge: ${2|false,true|}",
            "    always_nodes:",
            "      - ${3:element}",
            "    controller_config_file: ${5:path}",
            "    controller_host: ${6:string}",
            "    controller_oauthtoken: ${7:\"raw\"}",
            "    controller_password: ${8:string}",
            "    controller_username: ${9:string}",
            "    credentials:",
            "      - ${10:element}",
            "    diff_mode: ${11|false,true|}",
            "    execution_environment: ${12:string}",
            "    failure_nodes:",
            "      - ${14:element}",
            "    forks: ${15:int}",
            "    identifier: ${16:string}",
            "    instance_groups:",
            "      - ${17:element}",
            "    inventory: ${18:string}",
            "    job_slice_count: ${19:int}",
            "    job_tags: ${20:string}",
            "    job_type: ${21:string}",
            "    labels:",
            "      - ${22:element}",
            "    limit: ${23:string}",
            "    lookup_organization: ${24:string}",
            "    organization: ${25:string}",
            "    scm_branch: ${26:string}",
            "    skip_tags: ${27:string}",
            "    state: ${28|present,absent|}",
            "    success_nodes:",
            "      - ${29:element}",
            "    timeout: ${30:int}",
            "    unified_job_template: ${31:string}",
            "    validate_certs: ${32|false,true|}",
            "    verbosity: ${33:string}",
            "    workflow_job_template: ${34:string}",
            "$0"
        ],
        "description": "create, update, or destroy Automation Platform Controller workflow job template nodes.",
        "scope": "ansible"
    },
    "Run a workflow in Automation Platform Controller": {
        "prefix": [
            "awx.awx.workflow_launch",
            "Run a workflow in Automation Platform Controller"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.workflow_launch:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    inventory: ${9:string}",
            "    limit: ${10:string}",
            "    name: ${11:string}",
            "    organization: ${12:string}",
            "    scm_branch: ${13:string}",
            "    timeout: ${14:int}",
            "    validate_certs: ${15|false,true|}",
            "    wait: ${16|true,false|}",
            "$0"
        ],
        "description": "Run a workflow in Automation Platform Controller",
        "scope": "ansible"
    },
    "Wait for a workflow node to finish.": {
        "prefix": [
            "awx.awx.workflow_node_wait",
            "Wait for a workflow node to finish."
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  awx.awx.workflow_node_wait:",
            "    controller_config_file: ${2:path}",
            "    controller_host: ${3:string}",
            "    controller_oauthtoken: ${4:\"raw\"}",
            "    controller_password: ${5:string}",
            "    controller_username: ${6:string}",
            "    name: ${8:string}",
            "    timeout: ${9:10}",
            "    validate_certs: ${10|false,true|}",
            "    workflow_job_id: ${11:int}",
            "$0"
        ],
        "description": "Wait for a workflow node to finish.",
        "scope": "ansible"
    }
}