{
    "Insert a playbook": {
        "prefix": [
            "sr",
            "playbook"
        ],
        "body": [
            "---",
            "# Description",
            "- name: ${1:Description of playbook}",
            "  hosts: ${2:all}",
            "  gather_facts: ${3|true,false|}",
            "  vars:",
            "    key: value",
            "    # Uncomment next lines to use with include_vars",
            "    # ansible_distro: \"{{ ansible_distribution | lower | replace('\\\"', '') }}\"",
            "    # ansible_distro_version: \"{{ ansible_distribution_version | lower | replace('/', '_') }}\"",
            "    # ansible_distro_release: \"{{ ansible_distribution_release | lower }}\"",
            "    # ansible_distro_major_version: \"{{ ansible_distribution_major_version | lower | replace('/', '_') }}\"",
            "  tasks:",
            "    ${0}"
        ],
        "description": "Insert the header of a playbook",
        "scope": "ansible"
    },
    "Add Host to Group": {
        "prefix": [
            "sr",
            "ansible.builtin.add_host",
            "add host to group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.add_host:",
            "    hostname: ${2:host_or_ip_to_add}",
            "    groups: ",
            "      - ${3:group}",
            "$0"
        ],
        "description": "Used for Add Host to add a host in a group",
        "scope": "ansible"
    },
    "Assert expression": {
        "prefix": [
            "sr",
            "Assert",
            "ansible.builtin.assert"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.assert:",
            "    that:",
            "      - ${2:expression}",
            "    success_msg: ${3:message}",
            "    fail_msg: ${3:message}",
            "    quiet: ${4|false,true|}",
            "${0}"
        ],
        "description": "Assert an expression"
    },
    "Debug": {
        "prefix": [
            "sr",
            "ansible.builtin.debug",
            "debug a task"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.debug:",
            "    msg: \"{{ ${2: key }}}\"",
            "$0"
        ],
        "description": "Used for display message or variable",
        "scope": "ansible"
    },
    "Install package": {
        "prefix": [
            "sr",
            "ansible.builtin.package",
            "install a package"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.package:",
            "    name:",
            "      - ${2:top}",
            "    state: ${3|present,absent|}",
            "$0"
        ],
        "description": "Used for Install package on system",
        "scope": "ansible"
    },
    "Copy a file": {
        "prefix": [
            "sr",
            "ansible.builtin.copy",
            "copy a file"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.copy:",
            "    src: ${2:source}",
            "    dest: ${3:dest}",
            "    owner: ${4:owner}",
            "    group: ${5:group}",
            "    mode: \"${6|0755,0640,0644,0700,0600|}\"",
            "    backup: ${7|false,true|}",
            "    follow: ${8|false,true|}",
            "    remote_src: ${8|false,true|}",
            "$0"
        ],
        "description": "Used for create a file from a template",
        "scope": "ansible"
    },
    "Create file from Template": {
        "prefix": [
            "sr",
            "ansible.builtin.template",
            "generate a file from a template"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.template:",
            "    src: ${2:source}",
            "    dest: ${3:dest}",
            "    owner: ${4:owner}",
            "    group: ${5:group}",
            "    mode: \"${6|0755,0640,0644,0700,0600|}\"",
            "$0"
        ],
        "description": "Used for create a file from a template",
        "scope": "ansible"
    },
    "Create File,Directory": {
        "prefix": [
            "sr",
            "ansible.builtin.file",
            "create a file",
            "touch a file",
            "create a directory"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.file:",
            "    path: ${2:/tmp/test}",
            "    state: ${3|file,directory,touch,absent,link|}",
            "    owner: ${4:owner}",
            "    group: ${5:group}",
            "    mode: \"${6|0755,0640,0644,0700,0600|}\"",
            "    follow: ${7|false,true|}",
            "$0"
        ],
        "description": "Used for create or destroy a file, directory, link",
        "scope": "ansible"
    },
    "": {
        "prefix": [
            "sr",
            "ansible.builtin.get_url",
            "download file"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.get_url:",
            "    url: ${2:https://}",
            "    dest: ${3:/tmp/test}",
            "    owner: ${4:owner}",
            "    group: ${5:group}",
            "    mode: \"${6|0755,0640,0644,0700,0600|}\"",
            "    timeout: ${7:10}",
            "    force_basic_auth: ${8|false,true|}",
            "    force: ${9|false,true|}",
            "    decompress: ${10|true,false|}",
            "    use_proxy: ${11|true,false|}",
            "    validate_certs: ${12|true,false|}",
            "    #url_username:",
            "    #url_password:",
            "    #checksum:",
            "    #headers:",
            "    #   key1: value1",
            "$0"
        ],
        "description": "Download file from HTTP, HTTPS or FTP",
        "scope": "ansible"
    },
    "Create a group": {
        "prefix": [
            "sr",
            "ansible.builtin.group",
            "Create a group",
            "Destroy a group",
            "Modify a group"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.group:",
            "    name: ${2:somegroup}",
            "    state: ${3|present,absent|}",
            "    gid: ${4:1020}",
            "    system: ${9|false,true|}",
            "    non_unique: ${11|false,true|}",
            "${0}"
        ],
        "description": "Create a group ",
        "scope": "ansible"
    },
    "Hostname": {
        "prefix": [
            "sr",
            "ansible.builtin.hostname",
            "manage hostname"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.hostname:",
            "    name: ${2:hostname}",
            "    use: ${3|systemd,alpine,debian,freebsd,generic,macos,macosx,darwin,openbsd,openrc,redhat,sles,solaris|}",
            "${0}"
        ],
        "description": "Manage hostname",
        "scope": "ansible"
    },
    "Line In file": {
        "prefix": [
            "sr",
            "ansible.builtin.lineinfile",
            "include a line in a file"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.lineinfile:",
            "    path: ${2:/etc/hosts}",
            "    regexp: ${3:\"^text.*$\"}",
            "    line: ${4:\"replace\"}",
            "    owner: ${5:owner}",
            "    group: ${6:root}",
            "    mode: \"${7|0755,0640,0644,0700,0600|}\""
        ],
        "description": "Insert a line in a file",
        "scope": "ansible"
    },
    "Manage Services": {
        "prefix": [
            "sr",
            "ansible.builtin.service",
            "start a service",
            "stop a service",
            "enable a service",
            "disable a service"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.service:",
            "    name: ${2:service_name}",
            "    state: ${3|started,stopped,restarted,reloaded|}",
            "    enabled: ${4|false,true|}",
            "$0"
        ],
        "description": "Used for manage service",
        "scope": "ansible"
    },
    "Service Facts": {
        "prefix": [
            "sr",
            "ansible.builtin.service_facts",
            "Get service state"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.service_facts:",
            "$0"
        ],
        "description": "Get service state information as fact data",
        "scope": "ansible"
    },
    "Set Facts": {
        "prefix": [
            "sr",
            "ansible.builtin.set_fact",
            "compute a variable",
            "set a variable"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.set_fact:",
            "    ${2:key}: ${3:value}",
            "$0"
        ],
        "description": "Used for set variables",
        "scope": "ansible"
    },
    "Setup": {
        "prefix": [
            "sr",
            "ansible.builtin.setup",
            "Get facts"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${9:Comment}",
            "  ansible.builtin.setup:",
            "    gather_subset:",
            "      - '!all'",
            "      - facter",
            "    filter:",
            "      - 'ansible_distribution'",
            "      - 'ansible_machine_id'",
            "      - 'ansible_*_mb'",
            "$0"
        ],
        "description": "Gathers facts about remote hosts",
        "scope": "ansible"
    },
    "Stat": {
        "prefix": [
            "sr",
            "ansible.builtin.stat",
            "status of a file or a directory"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${9:Comment}",
            "  ansible.builtin.stat:",
            "    path: ${2:/tmp/test}",
            "    follow: ${3|false,true|}",
            "    get_checksum: ${4|false,true|}",
            "    get_mime: ${5|false,true|}",
            "    checksum_algorithm: ${6|md5,sha1,sha224,sha256,sha384,sha512|}",
            "    get_attributes: ${7|false,true|}",
            "    get_md5: ${8|false,true|}",
            "$0"
        ],
        "description": "Used for check stat of a file/directory",
        "scope": "ansible"
    },
    "Unarchive": {
        "prefix": [
            "sr",
            "ansible.builtin.unarchive",
            "unarchive a compressed file"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.unarchive:",
            "    src: ${2:/src}",
            "    dest: ${3:/dest}",
            "    owner: ${4:owner}",
            "    group: ${5:group}",
            "    mode: \"${6|0755,0640,0644,0700,0600|}\"",
            "${0}"
        ],
        "description": "Unarchive",
        "scope": "ansible"
    },
    "User": {
        "prefix": [
            "sr",
            "ansible.builtin.user",
            "Create an user account",
            "Destroy an user account",
            "Modify an user account"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.user:",
            "    name: ${2:name}",
            "    state: ${3|present,absent|}",
            "    comment: ${4:comment}",
            "    shell: ${5:/bin/bash}",
            "    uid: ${6:1020}",
            "    group: ${7:group}",
            "    force: ${8|false,true|}",
            "    append: ${9|false,true|}",
            "    remove: ${10|false,true|}",
            "    system: ${11|false,true|}",
            "    move_home: ${12|false,true|}",
            "    non_unique: ${13|false,true|}",
            "    generate_ssh_key: ${14|false,true|}",
            "    #groups: ",
            "${0}"
        ],
        "description": "Create a user Account ",
        "scope": "ansible"
    },
    "Wait for connection": {
        "prefix": [
            "sr",
            "ansible.builtin.wait_for_connection",
            "Waits until remote system is reachable"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.wait_for_connection:",
            "    delay: ${2:0}",
            "    sleep: ${3:1}",
            "    timeout: ${4:600}",
            "    connect_timeout: ${5:5}",
            "    active_connection_states: [\"ESTABLISHED\", \"FIN_WAIT1\", \"FIN_WAIT2\", \"SYN_RECV\", \"SYN_SENT\", \"TIME_WAIT\"]",
            "${0}"
        ],
        "descrition": "Waits until remote system is reachable",
        "scope": "ansible"
    },
    "Wait for a condition": {
        "prefix": [
            "sr",
            "ansible.builtin.wait_for",
            "Waits for a condition before continuing"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.wait_for:",
            "    delay: ${2:0}",
            "    sleep: ${3:1}",
            "    timeout: ${4:600}",
            "    connect_timeout: ${5:5}",
            "    host: ${6:127.0.0.1} # a hostname or IP address to wait for",
            "    msg: \"${7:An error message}\"",
            "    active_connection_states: [\"ESTABLISHED\", \"FIN_WAIT1\", \"FIN_WAIT2\", \"SYN_RECV\", \"SYN_SENT\", \"TIME_WAIT\"]",
            "    #port: # Port number to poll",
            "    #state: # The state of the port present,absent,started,stopped,drained",
            "    #path: /path #Path to a file on the filesystem that must exist before continuing",
            "    #The list of TCP connection states which are counted as active connections",
            "    #active_connection_states: ${6|ESTABLISHED,FIN_WAIT1,FIN_WAIT2,SYN_RECV,SYN_SENT,TIME_WAIT|}",
            "    #exclude_hosts: ",
            "    #search_regex:",
            "${0}"
        ],
        "description": "Waits for a condition before continuing",
        "scope": "ansible"
    },
    "Import a File Task": {
        "prefix": [
            "sr",
            "Import tasks",
            "ansible.builtin.import_tasks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.import_tasks:",
            "    file: ${2:tasks.yml}",
            "${0}"
        ],
        "description": "Import a File Task",
        "scope": "ansible"
    },
    "Include a Task File": {
        "prefix": [
            "sr",
            "Include tasks",
            "ansible.builtin.include_tasks"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.include_tasks:",
            "    file: ${2:tasks.yml}",
            "${0}"
        ],
        "description": "Include a File Task",
        "scope": "ansible"
    },
    "Import a Playbook": {
        "prefix": [
            "sr",
            "Import playbook",
            "ansible.builtin.import_playbook"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.import_playbook: ${2:playbook.yml}",
            "${0}"
        ],
        "description": "Import a Playbook",
        "scope": "ansible"
    },
    "Import a Role": {
        "prefix": [
            "sr",
            "Import role",
            "ansible.builtin.import_role"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.import_role:",
            "    name: ${2:role_name}",
            "${0}"
        ],
        "description": "Import a role",
        "scope": "ansible"
    },
    "Include a Role": {
        "prefix": [
            "sr",
            "Include role",
            "ansible.builtin.include_role"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  ansible.builtin.include_role:",
            "    name: ${2:role_name}",
            "    ${3:tasks_from: other}",
            "${0}"
        ],
        "description": "Include a role",
        "scope": "ansible"
    },
    "Include vars:": {
        "prefix": [
            "sr",
            "Include vars",
            "ansible.builtin.include_vars"
        ],
        "body": [
            "- name: Add os specific variables",
            "  ansible.builtin.include_vars: \"{{ loop_vars }}\"",
            "  loop: \"{{ query('ansible.builtin.first_found', params) }}\"",
            "  vars:",
            "    params:",
            "      files:",
            "        - \"{{ ansible_distro }}-{{ ansible_distro_version }}.yml\"",
            "        - \"{{ ansible_distro }}-{{ ansible_distro_release }}.yml\"",
            "        - \"{{ ansible_distro }}-{{ ansible_distro_major_version }}.yml\"",
            "        - \"{{ ansible_distro }}.yml\"",
            "        - \"{{ ansible_os_family | lower }}-family.yml\"",
            "        - \"{{ ansible_system | lower }}.yml\"",
            "      paths:",
            "        - \"vars\"",
            "      skip: true",
            "  loop_control:",
            "    loop_var: loop_vars",
            "$0"
        ],
        "description": "Include vars",
        "scope": "ansible"
    },
    "Insert a block": {
        "prefix": [
            "sr",
            "block"
        ],
        "body": [
            "- name: ${1:Description}",
            "  # ${99:Comment}",
            "  when: ",
            "  block:",
            "  # ${99:Comment}",
            "    ",
            "  rescue:",
            "  # ${99:Comment}",
            "    ",
            "  always:",
            "  # ${99:Comment}",
            "    ",
            "$0"
        ],
        "description": "User for create a block",
        "scope": "ansible"
    }
}